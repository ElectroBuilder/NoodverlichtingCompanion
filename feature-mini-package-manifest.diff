From 4567890123 Mon Sep 29 00:00:00 2025
From: M365 Copilot <copilot@example.com>
Date: Mon, 29 Sep 2025 20:40:00 +0200
Subject: [PATCH] Mini-patch: package -> nl.mikekemmink.noodverlichting + manifest activity

diff --git a/app/src/main/java/com/example/noodverlichting/ui/gebreken/EditGebrekDialog.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/EditGebrekDialog.java
new file mode 100644
index 0000000..abcdef0
--- /dev/null
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/EditGebrekDialog.java
@@ -0,0 +1,46 @@
+package nl.mikekemmink.noodverlichting.ui.gebreken;
+
+import android.app.Dialog;
+import android.os.Bundle;
+import android.widget.EditText;
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AlertDialog;
+import androidx.fragment.app.DialogFragment;
+
+public class EditGebrekDialog extends DialogFragment {
+
+    public interface OnSaveListener {
+        void onSave(String nieuweOmschrijving);
+    }
+
+    private static final String ARG_OMS = "arg_oms";
+
+    public static EditGebrekDialog newInstance(String omschrijving) {
+        Bundle b = new Bundle();
+        b.putString(ARG_OMS, omschrijving);
+        EditGebrekDialog d = new EditGebrekDialog();
+        d.setArguments(b);
+        return d;
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        EditText input = new EditText(requireContext());
+        if (getArguments() != null) {
+            input.setText(getArguments().getString(ARG_OMS, ""));
+        }
+        return new AlertDialog.Builder(requireContext())
+                .setTitle("Gebrek bewerken")
+                .setView(input)
+                .setPositiveButton("Opslaan", (dlg, w) -> {
+                    if (getParentFragment() instanceof OnSaveListener) {
+                        ((OnSaveListener) getParentFragment()).onSave(input.getText().toString());
+                    } else if (getActivity() instanceof OnSaveListener) {
+                        ((OnSaveListener) getActivity()).onSave(input.getText().toString());
+                    }
+                })
+                .setNegativeButton("Annuleren", null)
+                .create();
+    }
+}
diff --git a/app/src/main/java/com/example/noodverlichting/ui/gebreken/GebrekenActivity.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/GebrekenActivity.java
new file mode 100644
index 0000000..abcdef0
--- /dev/null
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/GebrekenActivity.java
@@ -0,0 +1,113 @@
+package nl.mikekemmink.noodverlichting.ui.gebreken;
+
+import android.os.Bundle;
+import androidx.activity.OnBackPressedCallback;
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.ItemTouchHelper;
+import androidx.recyclerview.widget.RecyclerView;
+import nl.mikekemmink.noodverlichting.R;
+import com.google.android.material.appbar.MaterialToolbar;
+import com.google.android.material.snackbar.Snackbar;
+import java.util.ArrayList;
+import java.util.List;
+
+public class GebrekenActivity extends AppCompatActivity implements EditGebrekDialog.OnSaveListener {
+
+    private RecyclerView recycler;
+    private GebrekenAdapter adapter;
+    private final List<Gebrek> data = new ArrayList<>();
+    private Gebrek laatstVerwijderd;
+    private int laatstVerwijderdPos = -1;
+    private int editingPos = -1;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_gebreken);
+
+        MaterialToolbar toolbar = findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        // Back icoon + gedrag
+        toolbar.setNavigationIcon(androidx.appcompat.R.drawable.abc_ic_ab_back_material);
+        toolbar.setNavigationOnClickListener(v -> finish());
+
+        recycler = findViewById(R.id.recyclerGebreken);
+        adapter = new GebrekenAdapter(data, (g, pos) -> openEditDialog(g, pos));
+        recycler.setAdapter(adapter);
+
+        // TODO: Laad daadwerkelijke data uit DB op basis van meegegeven inspectie_id
+        // long inspectieId = getIntent().getLongExtra("inspectie_id", -1);
+        seedDemoData();
+
+        ItemTouchHelper ith = new ItemTouchHelper(new SwipeCallback(this,
+                ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {
+            @Override
+            public void onSwiped(@NonNull RecyclerView.ViewHolder vh, int direction) {
+                int pos = vh.getAdapterPosition();
+                if (direction == ItemTouchHelper.LEFT) {
+                    // Verwijderen met UNDO
+                    laatstVerwijderd = data.get(pos);
+                    laatstVerwijderdPos = pos;
+                    data.remove(pos);
+                    adapter.notifyItemRemoved(pos);
+                    Snackbar.make(recycler, "Gebrek verwijderd", Snackbar.LENGTH_LONG)
+                            .setAction("UNDO", v -> {
+                                if (laatstVerwijderd != null && laatstVerwijderdPos >= 0 && laatstVerwijderdPos <= data.size()) {
+                                    data.add(laatstVerwijderdPos, laatstVerwijderd);
+                                    adapter.notifyItemInserted(laatstVerwijderdPos);
+                                }
+                            })
+                            .addCallback(new Snackbar.Callback() {
+                                @Override public void onDismissed(Snackbar bar, int event) {
+                                    if (event != DISMISS_EVENT_ACTION && laatstVerwijderd != null) {
+                                        // TODO: Definitief verwijderen in DB
+                                        laatstVerwijderd = null;
+                                        laatstVerwijderdPos = -1;
+                                    }
+                                }
+                            })
+                            .show();
+                } else if (direction == ItemTouchHelper.RIGHT) {
+                    Gebrek g = data.get(pos);
+                    adapter.notifyItemChanged(pos); // reset swipe UI
+                    openEditDialog(g, pos);
+                }
+            }
+        });
+        ith.attachToRecyclerView(recycler);
+
+        getOnBackPressedDispatcher().addCallback(this, new OnBackPressedCallback(true) {
+            @Override public void handleOnBackPressed() { finish(); }
+        });
+    }
+
+    private void openEditDialog(Gebrek g, int position) {
+        editingPos = position;
+        EditGebrekDialog.newInstance(g.omschrijving)
+                .show(getSupportFragmentManager(), "edit");
+    }
+
+    @Override
+    public void onSave(String nieuweOmschrijving) {
+        if (editingPos >= 0 && editingPos < data.size()) {
+            Gebrek g = data.get(editingPos);
+            g.omschrijving = nieuweOmschrijving;
+            // TODO: Persistente update in DB
+            adapter.notifyItemChanged(editingPos);
+        }
+        editingPos = -1;
+    }
+
+    private void seedDemoData() {
+        // Enkel voor demo / testen van UI. Vervang met echte data uit DB.
+        for (int i = 1; i <= 8; i++) {
+            Gebrek g = new Gebrek();
+            g.id = i;
+            g.inspectieId = 123;
+            g.omschrijving = "Gebrek #" + i + " (voorbeeld)";
+            g.datum = "2025-09-29";
+            data.add(g);
+        }
+    }
+}
diff --git a/app/src/main/java/com/example/noodverlichting/ui/gebreken/GebrekenAdapter.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/GebrekenAdapter.java
new file mode 100644
index 0000000..abcdef0
--- /dev/null
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/GebrekenAdapter.java
@@ -0,0 +1,47 @@
+package nl.mikekemmink.noodverlichting.ui.gebreken;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+import nl.mikekemmink.noodverlichting.R;
+import java.util.List;
+
+public class GebrekenAdapter extends RecyclerView.Adapter<GebrekenAdapter.VH> {
+
+    public interface OnEditClick { void onEdit(Gebrek g, int position); }
+
+    private final List<Gebrek> items;
+    private final OnEditClick onEdit;
+
+    public GebrekenAdapter(List<Gebrek> items, OnEditClick onEdit) {
+        this.items = items;
+        this.onEdit = onEdit;
+    }
+
+    @NonNull @Override public VH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View v = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_gebrek, parent, false);
+        return new VH(v);
+    }
+
+    @Override public void onBindViewHolder(@NonNull VH h, int pos) {
+        Gebrek g = items.get(pos);
+        h.tvOmschrijving.setText(g.omschrijving);
+        h.tvDatum.setText(g.datum);
+        h.itemView.setOnClickListener(v -> onEdit.onEdit(g, h.getAdapterPosition()));
+    }
+
+    @Override public int getItemCount() { return items.size(); }
+
+    static class VH extends RecyclerView.ViewHolder {
+        TextView tvOmschrijving, tvDatum;
+        VH(@NonNull View itemView) {
+            super(itemView);
+            tvOmschrijving = itemView.findViewById(R.id.tvOmschrijving);
+            tvDatum = itemView.findViewById(R.id.tvDatum);
+        }
+    }
+}
diff --git a/app/src/main/java/com/example/noodverlichting/ui/gebreken/Gebrek.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/Gebrek.java
new file mode 100644
index 0000000..abcdef0
--- /dev/null
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/Gebrek.java
@@ -0,0 +1,9 @@
+package nl.mikekemmink.noodverlichting.ui.gebreken;
+
+class Gebrek {
+    long id;
+    long inspectieId;
+    String omschrijving;
+    String datum;
+    String fotoPad;
+}
diff --git a/app/src/main/java/com/example/noodverlichting/ui/gebreken/SwipeCallback.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/SwipeCallback.java
new file mode 100644
index 0000000..abcdef0
--- /dev/null
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/gebreken/SwipeCallback.java
@@ -0,0 +1,70 @@
+package nl.mikekemmink.noodverlichting.ui.gebreken;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.drawable.Drawable;
+import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
+import androidx.recyclerview.widget.ItemTouchHelper;
+import androidx.recyclerview.widget.RecyclerView;
+import nl.mikekemmink.noodverlichting.R;
+
+public abstract class SwipeCallback extends ItemTouchHelper.SimpleCallback {
+
+    private final Paint paint = new Paint();
+    private final Drawable delete, edit;
+    private final int colorDelete, colorEdit;
+
+    public SwipeCallback(Context ctx, int swipeDirs) {
+        super(0, swipeDirs);
+        delete = safeDrawable(ctx, R.drawable.ic_delete_24);
+        edit   = safeDrawable(ctx, R.drawable.ic_edit_24);
+        colorDelete = 0xFFE53935; // rood 600
+        colorEdit   = 0xFF1E88E5; // blauw 600
+    }
+
+    private Drawable safeDrawable(Context ctx, int resId) {
+        try { return ContextCompat.getDrawable(ctx, resId); } catch (Exception ex) { return null; }
+    }
+
+    @Override public boolean onMove(@NonNull RecyclerView rv, @NonNull RecyclerView.ViewHolder vh, @NonNull RecyclerView.ViewHolder t) {
+        return false;
+    }
+
+    @Override
+    public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView rv, @NonNull RecyclerView.ViewHolder vh,
+                            float dX, float dY, int state, boolean active) {
+        super.onChildDraw(c, rv, vh, dX, dY, state, active);
+        if (state != ItemTouchHelper.ACTION_STATE_SWIPE) return;
+
+        float height = vh.itemView.getBottom() - vh.itemView.getTop();
+        float width = height / 3f; // icon‑marge
+        RectF bg;
+
+        if (dX < 0) { // links = DELETE
+            paint.setColor(0xFFE53935);
+            bg = new RectF(vh.itemView.getRight() + dX, vh.itemView.getTop(), vh.itemView.getRight(), vh.itemView.getBottom());
+            c.drawRect(bg, paint);
+            if (delete != null) {
+                int iconSize = (int)(height * 0.4f);
+                int left = (int)(vh.itemView.getRight() - width - iconSize);
+                int top  = (int)(vh.itemView.getTop() + (height - iconSize)/2f);
+                delete.setBounds(left, top, left + iconSize, top + iconSize);
+                delete.draw(c);
+            }
+        } else if (dX > 0) { // rechts = EDIT
+            paint.setColor(0xFF1E88E5);
+            bg = new RectF(vh.itemView.getLeft(), vh.itemView.getTop(), vh.itemView.getLeft() + dX, vh.itemView.getBottom());
+            c.drawRect(bg, paint);
+            if (edit != null) {
+                int iconSize = (int)(height * 0.4f);
+                int left = (int)(vh.itemView.getLeft() + width);
+                int top  = (int)(vh.itemView.getTop() + (height - iconSize)/2f);
+                edit.setBounds(left, top, left + iconSize, top + iconSize);
+                edit.draw(c);
+            }
+        }
+    }
+}
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 1111111..2222222 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@
+    <activity
        android:name=".ui.gebreken.GebrekenActivity"
        android:exported="false">
    </activity>
