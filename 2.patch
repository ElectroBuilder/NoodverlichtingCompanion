diff --git a/app/src/main/java/nl/mikekemmink/noodverlichting/ui/FixtureRowAdapter.java b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/FixtureRowAdapter.java
index 2222222..3333333 100644
--- a/app/src/main/java/nl/mikekemmink/noodverlichting/ui/FixtureRowAdapter.java
+++ b/app/src/main/java/nl/mikekemmink/noodverlichting/ui/FixtureRowAdapter.java
@@ -1,5 +1,5 @@
 package nl.mikekemmink.noodverlichting.ui;
- 
+
 import android.content.Context;
 import android.database.Cursor;
 import android.text.TextUtils;
@@ -38,22 +38,22 @@ public class FixtureRowAdapter extends CursorAdapter {
     @Override
     public View newView(Context context, Cursor cursor, ViewGroup parent) {
         View v = inflater.inflate(R.layout.row_fixture_wide, parent, false);
         ViewHolder h = new ViewHolder(v);
         v.setTag(h);
         v.setLongClickable(true);
         v.setClickable(true);
         v.setFocusable(false);
         if (h.rowContainer != null) {
-            h.rowContainer.setClickable(false);
-            h.rowContainer.setLongClickable(false);
+            h.rowContainer.setClickable(true);
+            h.rowContainer.setLongClickable(true);
             h.rowContainer.setFocusable(false);
         }
         View sv = v.findViewById(R.id.hscrollRow);
         View.OnClickListener rowClick = view2 -> {
             ViewHolder vh = (ViewHolder) v.getTag();
             if (vh != null && clickListener != null) {
                 Log.d("ArmatuurKlik", "RowClick via child, inspectieid = " + vh.inspectieid);
                 clickListener.onRowClick(vh.inspectieid);
             }
         };
         v.setOnClickListener(rowClick);
         if (sv != null) {
             sv.setClickable(true);
             sv.setOnClickListener(rowClick); // belangrijke toevoeging
         }
         if (h.rowContainer != null) {
             h.rowContainer.setClickable(true);
             h.rowContainer.setOnClickListener(rowClick);
         }
         if (sv instanceof SyncHorizontalScrollView && syncManager != null) {
             ((SyncHorizontalScrollView) sv).setSyncer(syncManager);
         }
         final GestureDetectorCompat detector = new GestureDetectorCompat(context,
             new GestureDetector.SimpleOnGestureListener() {
                 @Override public void onLongPress(MotionEvent e) {
                     ViewHolder vh = (ViewHolder) v.getTag();
                     if (vh != null && longClickListener != null) {
                         v.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
                         longClickListener.onRowLongClick(vh.inspectieid, vh.fixtureCode, vh.position);
                     }
                 }
             });
-        v.setOnTouchListener((view, event) -> { detector.onTouchEvent(event); return false; });
-        v.setOnLongClickListener(view -> {
+        // Root krijgt events -> detector
+        v.setOnTouchListener((view, event) -> { detector.onTouchEvent(event); return false; });
+        v.setOnLongClickListener(view -> {
             ViewHolder vh = (ViewHolder) view.getTag();
             if (vh != null && longClickListener != null) {
-                longClickListener.onRowLongClick(vh.inspectieid, vh.fixtureCode, vh.position);
+                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                longClickListener.onRowLongClick(vh.inspectieid, vh.fixtureCode, vh.position);
                 return true;
             }
             return false;
         });
+        // ▼▼▼ Ook aan de horizontale scroller koppelen ▼▼▼
+        if (sv != null) {
+            sv.setLongClickable(true);
+            sv.setOnTouchListener((view, event) -> { detector.onTouchEvent(event); return false; });
+            sv.setOnLongClickListener(view -> {
+                ViewHolder vh = (ViewHolder) v.getTag();
+                if (vh != null && longClickListener != null) {
+                    view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                    longClickListener.onRowLongClick(vh.inspectieid, vh.fixtureCode, vh.position);
+                    return true;
+                }
+                return false;
+            });
+        }
+        // ▼▼▼ En aan de container met de cellen ▼▼▼
+        if (h.rowContainer != null) {
+            h.rowContainer.setOnTouchListener((view, event) -> { detector.onTouchEvent(event); return false; });
+            h.rowContainer.setOnLongClickListener(view -> {
+                ViewHolder vh = (ViewHolder) v.getTag();
+                if (vh != null && longClickListener != null) {
+                    view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                    longClickListener.onRowLongClick(vh.inspectieid, vh.fixtureCode, vh.position);
+                    return true;
+                }
+                return false;
+            });
+        }
         return v;
     }
