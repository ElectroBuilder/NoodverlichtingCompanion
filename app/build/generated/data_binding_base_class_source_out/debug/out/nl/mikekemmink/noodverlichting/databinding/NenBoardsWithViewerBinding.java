// Generated by view binder compiler. Do not edit!
package nl.mikekemmink.noodverlichting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.mikekemmink.noodverlichting.R;
import nl.mikekemmink.noodverlichting.views.PdfMapView;

public final class NenBoardsWithViewerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnOpenPdf;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final PdfMapView pdfMapView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Spinner spPage;

  private NenBoardsWithViewerBinding(@NonNull FrameLayout rootView, @NonNull Button btnOpenPdf,
      @NonNull FloatingActionButton fab, @NonNull PdfMapView pdfMapView,
      @NonNull RecyclerView recyclerView, @NonNull Spinner spPage) {
    this.rootView = rootView;
    this.btnOpenPdf = btnOpenPdf;
    this.fab = fab;
    this.pdfMapView = pdfMapView;
    this.recyclerView = recyclerView;
    this.spPage = spPage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NenBoardsWithViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NenBoardsWithViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nen_boards_with_viewer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NenBoardsWithViewerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnOpenPdf;
      Button btnOpenPdf = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenPdf == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.pdfMapView;
      PdfMapView pdfMapView = ViewBindings.findChildViewById(rootView, id);
      if (pdfMapView == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.spPage;
      Spinner spPage = ViewBindings.findChildViewById(rootView, id);
      if (spPage == null) {
        break missingId;
      }

      return new NenBoardsWithViewerBinding((FrameLayout) rootView, btnOpenPdf, fab, pdfMapView,
          recyclerView, spPage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
