// Generated by view binder compiler. Do not edit!
package nl.mikekemmink.noodverlichting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.mikekemmink.noodverlichting.R;

public final class NenMetingenBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnPhotoBoard;

  @NonNull
  public final Button btnPhotoInfo;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final TextInputEditText etL1;

  @NonNull
  public final TextInputEditText etL2;

  @NonNull
  public final TextInputEditText etL3;

  @NonNull
  public final TextInputEditText etN;

  @NonNull
  public final TextInputEditText etPe;

  @NonNull
  public final TextInputEditText etSpdL1;

  @NonNull
  public final TextInputEditText etSpdL2;

  @NonNull
  public final TextInputEditText etSpdL3;

  @NonNull
  public final TextInputEditText etSpdN;

  @NonNull
  public final ImageView imgBoard;

  @NonNull
  public final ImageView imgInfo;

  private NenMetingenBinding(@NonNull NestedScrollView rootView, @NonNull Button btnCancel,
      @NonNull Button btnPhotoBoard, @NonNull Button btnPhotoInfo, @NonNull Button btnSave,
      @NonNull TextInputEditText etL1, @NonNull TextInputEditText etL2,
      @NonNull TextInputEditText etL3, @NonNull TextInputEditText etN,
      @NonNull TextInputEditText etPe, @NonNull TextInputEditText etSpdL1,
      @NonNull TextInputEditText etSpdL2, @NonNull TextInputEditText etSpdL3,
      @NonNull TextInputEditText etSpdN, @NonNull ImageView imgBoard, @NonNull ImageView imgInfo) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnPhotoBoard = btnPhotoBoard;
    this.btnPhotoInfo = btnPhotoInfo;
    this.btnSave = btnSave;
    this.etL1 = etL1;
    this.etL2 = etL2;
    this.etL3 = etL3;
    this.etN = etN;
    this.etPe = etPe;
    this.etSpdL1 = etSpdL1;
    this.etSpdL2 = etSpdL2;
    this.etSpdL3 = etSpdL3;
    this.etSpdN = etSpdN;
    this.imgBoard = imgBoard;
    this.imgInfo = imgInfo;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static NenMetingenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NenMetingenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nen_metingen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NenMetingenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_photo_board;
      Button btnPhotoBoard = ViewBindings.findChildViewById(rootView, id);
      if (btnPhotoBoard == null) {
        break missingId;
      }

      id = R.id.btn_photo_info;
      Button btnPhotoInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnPhotoInfo == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.et_l1;
      TextInputEditText etL1 = ViewBindings.findChildViewById(rootView, id);
      if (etL1 == null) {
        break missingId;
      }

      id = R.id.et_l2;
      TextInputEditText etL2 = ViewBindings.findChildViewById(rootView, id);
      if (etL2 == null) {
        break missingId;
      }

      id = R.id.et_l3;
      TextInputEditText etL3 = ViewBindings.findChildViewById(rootView, id);
      if (etL3 == null) {
        break missingId;
      }

      id = R.id.et_n;
      TextInputEditText etN = ViewBindings.findChildViewById(rootView, id);
      if (etN == null) {
        break missingId;
      }

      id = R.id.et_pe;
      TextInputEditText etPe = ViewBindings.findChildViewById(rootView, id);
      if (etPe == null) {
        break missingId;
      }

      id = R.id.et_spd_l1;
      TextInputEditText etSpdL1 = ViewBindings.findChildViewById(rootView, id);
      if (etSpdL1 == null) {
        break missingId;
      }

      id = R.id.et_spd_l2;
      TextInputEditText etSpdL2 = ViewBindings.findChildViewById(rootView, id);
      if (etSpdL2 == null) {
        break missingId;
      }

      id = R.id.et_spd_l3;
      TextInputEditText etSpdL3 = ViewBindings.findChildViewById(rootView, id);
      if (etSpdL3 == null) {
        break missingId;
      }

      id = R.id.et_spd_N;
      TextInputEditText etSpdN = ViewBindings.findChildViewById(rootView, id);
      if (etSpdN == null) {
        break missingId;
      }

      id = R.id.img_board;
      ImageView imgBoard = ViewBindings.findChildViewById(rootView, id);
      if (imgBoard == null) {
        break missingId;
      }

      id = R.id.img_info;
      ImageView imgInfo = ViewBindings.findChildViewById(rootView, id);
      if (imgInfo == null) {
        break missingId;
      }

      return new NenMetingenBinding((NestedScrollView) rootView, btnCancel, btnPhotoBoard,
          btnPhotoInfo, btnSave, etL1, etL2, etL3, etN, etPe, etSpdL1, etSpdL2, etSpdL3, etSpdN,
          imgBoard, imgInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
