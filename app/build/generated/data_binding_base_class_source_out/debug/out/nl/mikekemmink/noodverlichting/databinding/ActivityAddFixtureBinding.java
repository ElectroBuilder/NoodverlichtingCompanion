// Generated by view binder compiler. Do not edit!
package nl.mikekemmink.noodverlichting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.mikekemmink.noodverlichting.R;

public final class ActivityAddFixtureBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAnnuleren;

  @NonNull
  public final Button btnOpslaan;

  @NonNull
  public final CheckBox cbATS;

  @NonNull
  public final CheckBox cbOpTekening;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final EditText etAccuLeeftijd;

  @NonNull
  public final EditText etAccuType;

  @NonNull
  public final EditText etArtikelNr;

  @NonNull
  public final EditText etCode;

  @NonNull
  public final EditText etDuurtest;

  @NonNull
  public final EditText etLocatie;

  @NonNull
  public final EditText etMerk;

  @NonNull
  public final EditText etNr;

  @NonNull
  public final EditText etOpmerking;

  @NonNull
  public final EditText etPictogram;

  @NonNull
  public final AutoCompleteTextView etRuimte;

  @NonNull
  public final EditText etType;

  @NonNull
  public final AutoCompleteTextView etVerdieping;

  @NonNull
  public final ScrollView scrollRoot;

  @NonNull
  public final Spinner spMontage;

  @NonNull
  public final Spinner spSoort;

  private ActivityAddFixtureBinding(@NonNull ScrollView rootView, @NonNull Button btnAnnuleren,
      @NonNull Button btnOpslaan, @NonNull CheckBox cbATS, @NonNull CheckBox cbOpTekening,
      @NonNull LinearLayout container, @NonNull EditText etAccuLeeftijd,
      @NonNull EditText etAccuType, @NonNull EditText etArtikelNr, @NonNull EditText etCode,
      @NonNull EditText etDuurtest, @NonNull EditText etLocatie, @NonNull EditText etMerk,
      @NonNull EditText etNr, @NonNull EditText etOpmerking, @NonNull EditText etPictogram,
      @NonNull AutoCompleteTextView etRuimte, @NonNull EditText etType,
      @NonNull AutoCompleteTextView etVerdieping, @NonNull ScrollView scrollRoot,
      @NonNull Spinner spMontage, @NonNull Spinner spSoort) {
    this.rootView = rootView;
    this.btnAnnuleren = btnAnnuleren;
    this.btnOpslaan = btnOpslaan;
    this.cbATS = cbATS;
    this.cbOpTekening = cbOpTekening;
    this.container = container;
    this.etAccuLeeftijd = etAccuLeeftijd;
    this.etAccuType = etAccuType;
    this.etArtikelNr = etArtikelNr;
    this.etCode = etCode;
    this.etDuurtest = etDuurtest;
    this.etLocatie = etLocatie;
    this.etMerk = etMerk;
    this.etNr = etNr;
    this.etOpmerking = etOpmerking;
    this.etPictogram = etPictogram;
    this.etRuimte = etRuimte;
    this.etType = etType;
    this.etVerdieping = etVerdieping;
    this.scrollRoot = scrollRoot;
    this.spMontage = spMontage;
    this.spSoort = spSoort;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddFixtureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddFixtureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_fixture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddFixtureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAnnuleren;
      Button btnAnnuleren = ViewBindings.findChildViewById(rootView, id);
      if (btnAnnuleren == null) {
        break missingId;
      }

      id = R.id.btnOpslaan;
      Button btnOpslaan = ViewBindings.findChildViewById(rootView, id);
      if (btnOpslaan == null) {
        break missingId;
      }

      id = R.id.cbATS;
      CheckBox cbATS = ViewBindings.findChildViewById(rootView, id);
      if (cbATS == null) {
        break missingId;
      }

      id = R.id.cbOpTekening;
      CheckBox cbOpTekening = ViewBindings.findChildViewById(rootView, id);
      if (cbOpTekening == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.etAccuLeeftijd;
      EditText etAccuLeeftijd = ViewBindings.findChildViewById(rootView, id);
      if (etAccuLeeftijd == null) {
        break missingId;
      }

      id = R.id.etAccuType;
      EditText etAccuType = ViewBindings.findChildViewById(rootView, id);
      if (etAccuType == null) {
        break missingId;
      }

      id = R.id.etArtikelNr;
      EditText etArtikelNr = ViewBindings.findChildViewById(rootView, id);
      if (etArtikelNr == null) {
        break missingId;
      }

      id = R.id.etCode;
      EditText etCode = ViewBindings.findChildViewById(rootView, id);
      if (etCode == null) {
        break missingId;
      }

      id = R.id.etDuurtest;
      EditText etDuurtest = ViewBindings.findChildViewById(rootView, id);
      if (etDuurtest == null) {
        break missingId;
      }

      id = R.id.etLocatie;
      EditText etLocatie = ViewBindings.findChildViewById(rootView, id);
      if (etLocatie == null) {
        break missingId;
      }

      id = R.id.etMerk;
      EditText etMerk = ViewBindings.findChildViewById(rootView, id);
      if (etMerk == null) {
        break missingId;
      }

      id = R.id.etNr;
      EditText etNr = ViewBindings.findChildViewById(rootView, id);
      if (etNr == null) {
        break missingId;
      }

      id = R.id.etOpmerking;
      EditText etOpmerking = ViewBindings.findChildViewById(rootView, id);
      if (etOpmerking == null) {
        break missingId;
      }

      id = R.id.etPictogram;
      EditText etPictogram = ViewBindings.findChildViewById(rootView, id);
      if (etPictogram == null) {
        break missingId;
      }

      id = R.id.etRuimte;
      AutoCompleteTextView etRuimte = ViewBindings.findChildViewById(rootView, id);
      if (etRuimte == null) {
        break missingId;
      }

      id = R.id.etType;
      EditText etType = ViewBindings.findChildViewById(rootView, id);
      if (etType == null) {
        break missingId;
      }

      id = R.id.etVerdieping;
      AutoCompleteTextView etVerdieping = ViewBindings.findChildViewById(rootView, id);
      if (etVerdieping == null) {
        break missingId;
      }

      ScrollView scrollRoot = (ScrollView) rootView;

      id = R.id.spMontage;
      Spinner spMontage = ViewBindings.findChildViewById(rootView, id);
      if (spMontage == null) {
        break missingId;
      }

      id = R.id.spSoort;
      Spinner spSoort = ViewBindings.findChildViewById(rootView, id);
      if (spSoort == null) {
        break missingId;
      }

      return new ActivityAddFixtureBinding((ScrollView) rootView, btnAnnuleren, btnOpslaan, cbATS,
          cbOpTekening, container, etAccuLeeftijd, etAccuType, etArtikelNr, etCode, etDuurtest,
          etLocatie, etMerk, etNr, etOpmerking, etPictogram, etRuimte, etType, etVerdieping,
          scrollRoot, spMontage, spSoort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
