// Generated by view binder compiler. Do not edit!
package nl.mikekemmink.noodverlichting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.mikekemmink.noodverlichting.R;

public final class ActivitySyncStatusBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSyncNow;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final LinearLayout root;

  @NonNull
  public final TextView tvErrors;

  @NonNull
  public final TextView tvLastResult;

  @NonNull
  public final TextView tvLastSync;

  @NonNull
  public final TextView tvPushDefects;

  @NonNull
  public final TextView tvPushMarkers;

  @NonNull
  public final TextView tvQueueDefects;

  @NonNull
  public final TextView tvQueueMarkers;

  @NonNull
  public final TextView tvServer;

  private ActivitySyncStatusBinding(@NonNull LinearLayout rootView, @NonNull Button btnSyncNow,
      @NonNull ProgressBar progress, @NonNull LinearLayout root, @NonNull TextView tvErrors,
      @NonNull TextView tvLastResult, @NonNull TextView tvLastSync, @NonNull TextView tvPushDefects,
      @NonNull TextView tvPushMarkers, @NonNull TextView tvQueueDefects,
      @NonNull TextView tvQueueMarkers, @NonNull TextView tvServer) {
    this.rootView = rootView;
    this.btnSyncNow = btnSyncNow;
    this.progress = progress;
    this.root = root;
    this.tvErrors = tvErrors;
    this.tvLastResult = tvLastResult;
    this.tvLastSync = tvLastSync;
    this.tvPushDefects = tvPushDefects;
    this.tvPushMarkers = tvPushMarkers;
    this.tvQueueDefects = tvQueueDefects;
    this.tvQueueMarkers = tvQueueMarkers;
    this.tvServer = tvServer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySyncStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySyncStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sync_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySyncStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSyncNow;
      Button btnSyncNow = ViewBindings.findChildViewById(rootView, id);
      if (btnSyncNow == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      LinearLayout root = (LinearLayout) rootView;

      id = R.id.tvErrors;
      TextView tvErrors = ViewBindings.findChildViewById(rootView, id);
      if (tvErrors == null) {
        break missingId;
      }

      id = R.id.tvLastResult;
      TextView tvLastResult = ViewBindings.findChildViewById(rootView, id);
      if (tvLastResult == null) {
        break missingId;
      }

      id = R.id.tvLastSync;
      TextView tvLastSync = ViewBindings.findChildViewById(rootView, id);
      if (tvLastSync == null) {
        break missingId;
      }

      id = R.id.tvPushDefects;
      TextView tvPushDefects = ViewBindings.findChildViewById(rootView, id);
      if (tvPushDefects == null) {
        break missingId;
      }

      id = R.id.tvPushMarkers;
      TextView tvPushMarkers = ViewBindings.findChildViewById(rootView, id);
      if (tvPushMarkers == null) {
        break missingId;
      }

      id = R.id.tvQueueDefects;
      TextView tvQueueDefects = ViewBindings.findChildViewById(rootView, id);
      if (tvQueueDefects == null) {
        break missingId;
      }

      id = R.id.tvQueueMarkers;
      TextView tvQueueMarkers = ViewBindings.findChildViewById(rootView, id);
      if (tvQueueMarkers == null) {
        break missingId;
      }

      id = R.id.tvServer;
      TextView tvServer = ViewBindings.findChildViewById(rootView, id);
      if (tvServer == null) {
        break missingId;
      }

      return new ActivitySyncStatusBinding((LinearLayout) rootView, btnSyncNow, progress, root,
          tvErrors, tvLastResult, tvLastSync, tvPushDefects, tvPushMarkers, tvQueueDefects,
          tvQueueMarkers, tvServer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
