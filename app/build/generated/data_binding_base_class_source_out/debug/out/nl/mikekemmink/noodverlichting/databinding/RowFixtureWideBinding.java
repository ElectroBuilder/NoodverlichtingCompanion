// Generated by view binder compiler. Do not edit!
package nl.mikekemmink.noodverlichting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.mikekemmink.noodverlichting.R;
import nl.mikekemmink.noodverlichting.ui.SyncHorizontalScrollView;

public final class RowFixtureWideBinding implements ViewBinding {
  @NonNull
  private final SyncHorizontalScrollView rootView;

  @NonNull
  public final SyncHorizontalScrollView hscrollRow;

  @NonNull
  public final LinearLayout rowContainer;

  @NonNull
  public final TextView tvATS;

  @NonNull
  public final TextView tvAccuLeeftijd;

  @NonNull
  public final TextView tvAccuType;

  @NonNull
  public final TextView tvArtikelNr;

  @NonNull
  public final TextView tvCode;

  @NonNull
  public final TextView tvDuurtest;

  @NonNull
  public final TextView tvMerk;

  @NonNull
  public final TextView tvMontagewijze;

  @NonNull
  public final TextView tvNr;

  @NonNull
  public final TextView tvOpTekening;

  @NonNull
  public final TextView tvOpmerking;

  @NonNull
  public final TextView tvPictogram;

  @NonNull
  public final TextView tvSoort;

  @NonNull
  public final TextView tvType;

  @NonNull
  public final TextView tvVerdieping;

  private RowFixtureWideBinding(@NonNull SyncHorizontalScrollView rootView,
      @NonNull SyncHorizontalScrollView hscrollRow, @NonNull LinearLayout rowContainer,
      @NonNull TextView tvATS, @NonNull TextView tvAccuLeeftijd, @NonNull TextView tvAccuType,
      @NonNull TextView tvArtikelNr, @NonNull TextView tvCode, @NonNull TextView tvDuurtest,
      @NonNull TextView tvMerk, @NonNull TextView tvMontagewijze, @NonNull TextView tvNr,
      @NonNull TextView tvOpTekening, @NonNull TextView tvOpmerking, @NonNull TextView tvPictogram,
      @NonNull TextView tvSoort, @NonNull TextView tvType, @NonNull TextView tvVerdieping) {
    this.rootView = rootView;
    this.hscrollRow = hscrollRow;
    this.rowContainer = rowContainer;
    this.tvATS = tvATS;
    this.tvAccuLeeftijd = tvAccuLeeftijd;
    this.tvAccuType = tvAccuType;
    this.tvArtikelNr = tvArtikelNr;
    this.tvCode = tvCode;
    this.tvDuurtest = tvDuurtest;
    this.tvMerk = tvMerk;
    this.tvMontagewijze = tvMontagewijze;
    this.tvNr = tvNr;
    this.tvOpTekening = tvOpTekening;
    this.tvOpmerking = tvOpmerking;
    this.tvPictogram = tvPictogram;
    this.tvSoort = tvSoort;
    this.tvType = tvType;
    this.tvVerdieping = tvVerdieping;
  }

  @Override
  @NonNull
  public SyncHorizontalScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowFixtureWideBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowFixtureWideBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_fixture_wide, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowFixtureWideBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      SyncHorizontalScrollView hscrollRow = (SyncHorizontalScrollView) rootView;

      id = R.id.rowContainer;
      LinearLayout rowContainer = ViewBindings.findChildViewById(rootView, id);
      if (rowContainer == null) {
        break missingId;
      }

      id = R.id.tvATS;
      TextView tvATS = ViewBindings.findChildViewById(rootView, id);
      if (tvATS == null) {
        break missingId;
      }

      id = R.id.tvAccuLeeftijd;
      TextView tvAccuLeeftijd = ViewBindings.findChildViewById(rootView, id);
      if (tvAccuLeeftijd == null) {
        break missingId;
      }

      id = R.id.tvAccuType;
      TextView tvAccuType = ViewBindings.findChildViewById(rootView, id);
      if (tvAccuType == null) {
        break missingId;
      }

      id = R.id.tvArtikelNr;
      TextView tvArtikelNr = ViewBindings.findChildViewById(rootView, id);
      if (tvArtikelNr == null) {
        break missingId;
      }

      id = R.id.tvCode;
      TextView tvCode = ViewBindings.findChildViewById(rootView, id);
      if (tvCode == null) {
        break missingId;
      }

      id = R.id.tvDuurtest;
      TextView tvDuurtest = ViewBindings.findChildViewById(rootView, id);
      if (tvDuurtest == null) {
        break missingId;
      }

      id = R.id.tvMerk;
      TextView tvMerk = ViewBindings.findChildViewById(rootView, id);
      if (tvMerk == null) {
        break missingId;
      }

      id = R.id.tvMontagewijze;
      TextView tvMontagewijze = ViewBindings.findChildViewById(rootView, id);
      if (tvMontagewijze == null) {
        break missingId;
      }

      id = R.id.tvNr;
      TextView tvNr = ViewBindings.findChildViewById(rootView, id);
      if (tvNr == null) {
        break missingId;
      }

      id = R.id.tvOpTekening;
      TextView tvOpTekening = ViewBindings.findChildViewById(rootView, id);
      if (tvOpTekening == null) {
        break missingId;
      }

      id = R.id.tvOpmerking;
      TextView tvOpmerking = ViewBindings.findChildViewById(rootView, id);
      if (tvOpmerking == null) {
        break missingId;
      }

      id = R.id.tvPictogram;
      TextView tvPictogram = ViewBindings.findChildViewById(rootView, id);
      if (tvPictogram == null) {
        break missingId;
      }

      id = R.id.tvSoort;
      TextView tvSoort = ViewBindings.findChildViewById(rootView, id);
      if (tvSoort == null) {
        break missingId;
      }

      id = R.id.tvType;
      TextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      id = R.id.tvVerdieping;
      TextView tvVerdieping = ViewBindings.findChildViewById(rootView, id);
      if (tvVerdieping == null) {
        break missingId;
      }

      return new RowFixtureWideBinding((SyncHorizontalScrollView) rootView, hscrollRow,
          rowContainer, tvATS, tvAccuLeeftijd, tvAccuType, tvArtikelNr, tvCode, tvDuurtest, tvMerk,
          tvMontagewijze, tvNr, tvOpTekening, tvOpmerking, tvPictogram, tvSoort, tvType,
          tvVerdieping);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
